spring.application.name=test
token=AIzaSyA9HEOZrRHZP026vQObeDz1PVD_GLpMV50
secretKey=${SECRETKEY}
server.port=9090
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${DB_LOCAL}
spring.datasource.username=${DB_LOCAL_USERNAME}
spring.datasource.password=${DB_LOCAL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

spring.jpa.hibernate.show-sql=true
# Show or not log for each sql query
spring.datasource.initialization-mode=always
#spring.datasource.initialize=true
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update,validate:=>for production): with "create-drop" the database
# schema will be automatically created afresh for every start of application

spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.log=DEBUG

cors.allowedOrigins=http://localhost:4200,https://example.com
cors.allowedMethods=GET,POST,PUT,DELETE
cors.allowedHeaders=*
cors.allowCredentials=true

